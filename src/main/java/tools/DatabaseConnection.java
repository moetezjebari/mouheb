package tools;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/**
 * Classe Singleton pour g√©rer la connexion √† la base de donn√©es MySQL.
 */
public class DatabaseConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/pifreelance"; // Nom de ta BD
    private static final String USER = "root"; // Utilisateur MySQL
    private static final String PWD = ""; // Mets ton mot de passe si n√©cessaire

    private static Connection cnx;
    private static DatabaseConnection instance;

    /**
     * Constructeur priv√© (Singleton) - √âvite l'instanciation multiple.
     */
    private DatabaseConnection() {
        try {
            // Charger le driver JDBC MySQL
            Class.forName("com.mysql.cj.jdbc.Driver");

            // √âtablir une seule connexion et la garder ouverte
            cnx = DriverManager.getConnection(URL, USER, PWD);
            System.out.println("‚úÖ Connexion √©tablie avec succ√®s !");
        } catch (ClassNotFoundException e) {
            System.err.println("‚ùå Erreur : Driver JDBC non trouv√© !");
            e.printStackTrace();
        } catch (SQLException e) {
            System.err.println("‚ùå Erreur de connexion √† la base de donn√©es !");
            e.printStackTrace();
        }
    }

    /**
     * Retourne l'instance unique (Singleton)
     */
    public static DatabaseConnection getInstance() {
        if (instance == null) {
            instance = new DatabaseConnection();
        }
        return instance;
    }

    /**
     * Retourne la connexion active √† la base de donn√©es.
     */
    public Connection getCnx() {
        try {
            if (cnx == null || cnx.isClosed()) { // V√©rifie si la connexion est ferm√©e et la r√©ouvre si n√©cessaire
                cnx = DriverManager.getConnection(URL, USER, PWD);
                System.out.println("üîÑ R√©ouverture de la connexion MySQL...");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return cnx;
    }
}
